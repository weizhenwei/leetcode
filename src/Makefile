CXX = g++
# CXXFLAGS = -g -I. -Wall
CXXFLAGS = -g -I.

SRCS = 2011-03-13_Two_Sum.cpp \
       2011-05-15_Longest_Substring_Without_Repeating_Characters.cpp \
       2011-11-01_Add_Two_Numbers.cpp \
       2011-11-11_Longest_Palindromic_Substring.cpp \
       2011-12-05_ZigZag_Conversion.cpp \
       2011-12-25_Reverse_Integer.cpp \
       2011-12-26_String_to_Integer.cpp \
       2012-01-04_Palindrome_Number.cpp \
       2012-01-08_Regular_Expression_Matching.cpp \
       2012-01-08_Container_With_Most_Water.cpp \
       2012-01-15_Integer_to_Roman.cpp \
       2012-01-15_Roman_to_Integer.cpp \
       2012-01-17_3Sum.cpp \
       2012-01-17_Longest_Common_Prefix.cpp \
       2012-01-18_3Sum_Closest.cpp \
       2012-01-26_4Sum.cpp \
       2012-01-27_Remove_Nth_Node_From_End_of_List.cpp \
       2012-01-30_Valid_Parentheses.cpp \
       2012-02-13_Merge_k_Sorted_Lists.cpp \
       2012-02-14_Swap_Nodes_in_Pairs.cpp \
       2012-02-15_Reverse_Nodes_in_k-Group.cpp \
       2012-02-16_Remove_Duplicates_from_Sorted_Array.cpp \
       2012-02-16_Remove_Element.cpp \
       2012-02-18_Divide_Two_Integers.cpp \
       2012-02-18_Implement_strStr.cpp \
       2012-02-23_Substring_with_Concatenation_of_All_Words.cpp \
       2012-03-02_Search_for_a_Range.cpp \
       2012-03-03_Search_Insert_Position.cpp \
       2012-03-08_First_Missing_Positive.cpp \
       2012-03-12_Multiply_Strings.cpp \
       2012-03-02_Search_in_Rotated_Sorted_Array.cpp \
       2012-03-05_Count_and_Say.cpp \
       2012-03-16_Permutations.cpp \
       2012-03-16_Permutations_II.cpp \
       2012-03-17_Rotate_Image.cpp \
       2012-03-19_Pow.cpp \
       2012-03-21_Maximum_Subarray.cpp \
       2012-03-24_Spiral_Matrix.cpp \
       2012-03-27_Length_of_Last_Word.cpp \
       2012-03-27_Permutation_Sequence.cpp \
       2012-03-27_Rotate_list.cpp \
       2012-03-27_Spiral_Matrix_II.cpp \
       2012-03-28_Unique_Paths.cpp \
       2012-03-28_Unique_Paths_II.cpp \
       2012-03-30_Merge_Two_Sorted_Lists.cpp \
       2012-04-02_Add_Binary.cpp \
       2012-04-02_Valid_Number.cpp \
       2012-04-02_Plus_One.cpp \
       2012-04-03_Climbing_Stairs.cpp \
       2012-04-03_Sqrt.cpp \
       2012-04-06_Search_a_2D_Matrix.cpp \
       2012-04-08_Sort_Colors.cpp \
       2012-04-18_Combinations.cpp \
       2012-04-18_Subsets.cpp \
       2012-04-19_Remove_Duplicates_from_Sorted_Array_II.cpp \
       2012-04-19_Search_in_Rotated_Sorted_Array_II.cpp \
       2012-04-22_Remove_Duplicates_from_Sorted_List.cpp \
       2012-04-22_Remove_Duplicates_from_Sorted_List_II.cpp \
       2012-04-30_Partition_List.cpp \
       2012-05-20_Merge_Sorted_Array.cpp \
       2012-06-25_Decode_ways.cpp \
       2012-06-25_Subsets_II.cpp \
       2012-06-27_Reverse_Linked_List_II.cpp \
       2012-08-27_Binary_Tree_Inorder_Traversal.cpp \
       2012-08-27_Unique_Binary_Search_Trees.cpp \
       2012-08-31_Validate_Binary_Search_Tree.cpp \
       2012-09-03_Same_Tree.cpp \
       2012-09-23_Symmetric_Tree.cpp \
       2012-09-28_Binary_Tree_Level_Order_Traversal.cpp \
       2012-09-28_Binary_Tree_Zigzag_Level_Order_Traversal.cpp \
       2012-09-29_Maximum_Depth_of_Binary_Tree.cpp \
       2012-09-30_Construct_Binary_Tree_from_Inorder_and_Postorder_Traversal.cpp \
       2012-09-30_Construct_Binary_Tree_from_Preorder_and_Inorder_Traversal.cpp \
       2012-10-01_Binary_Tree_Level_Order_Traversal_II.cpp \
       2013-10-01_Single_Number.cpp \
       2012-10-02_Convert_Sorted_Array_to_Binary_Search_Tree.cpp \
       2012-10-02_Convert_Sorted_List_to_Binary_Search_Tree.cpp \
       2013-10-02_Single_Number_II.cpp \
       2013-10-03_Copy_List_with_Random_Pointer.cpp \
       2012-10-08_Balanced_Binary_Tree.cpp \
       2012-10-09_Minimum_Depth_of_Binary_Tree.cpp \
       2012-10-13_Path_Sum.cpp \
       2012-10-14_Path_Sum_II.cpp \
       2012-10-14_Flatten_Binary_Tree_to_Linked_List.cpp \
       2012-10-28_Pascals_Triangle.cpp \
       2012-10-28_Pascals_Triangle_II.cpp \
       2012-10-28_Populating_Next_Right_Pointers_in_Each_Node.cpp \
       2012-10-28_Populating_Next_Right_Pointers_in_Each_Node_II.cpp \
       2012-10-29_Triangle.cpp \
       2012-10-30_Best_Time_to_Buy_and_Sell_Stock.cpp \
       2012-10-30_Best_Time_to_Buy_and_Sell_Stock_II.cpp \
       2012-11-06_Best_Time_to_Buy_and_Sell_Stock_III.cpp \
       2013-01-12_Valid_Palindrome.cpp \
       2013-02-18_Sum_Root_to_Leaf_Numbers.cpp \
       2013-10-28_Linked_List_Cycle.cpp \
       2013-10-30_Linked_List_Cycle_II.cpp \
       2013-11-02_Reorder_List.cpp \
       2013-11-05_Binary_Tree_Preorder_Traversal.cpp \
       2013-11-07_Binary_Tree_Postorder_Traversal.cpp \
       2013-11-12_Insertion_Sort_List.cpp \
       2013-11-16_Sort_List.cpp \
       2013-11-27_Evaluate_Reverse_Polish_Notation.cpp \
       2014-03-05_Reverse_Words_in_a_String.cpp \
       2014-10-15_Find_Minimum_in_Rotated_Sorted_Array.cpp \
       2014-10-20_Find_Minimum_in_Rotated_Sorted_Array_II.cpp


OBJECTS = $(SRCS:%.cpp=%.o)
TARGETS = $(SRCS:%.cpp=%)  
all : $(TARGETS)
	for target in $(TARGETS); do \
		$(CXX) $(CXXFLAGS) -o $$target $$target.cpp; \
		done  

clean:
	-rm -f $(TARGETS) $(OBJECTS)  

.PHONY: all clean
